/** * 字串延長函數(左邊延長)。 *   * @author ace *  * @version 2010/10/14 v0.10 初始版本。    *    * @param {Integer} length 字串延長後長度。 * @param {String} pad 若字串長度未達參數length指定之長度，則以此字元延長。     *    * @return 延長後的字串。  * @type String  *    * @requires  *      * @see <a href="http://www.dotblogs.com.tw/wxvbbo/archive/2008/03/31/2368.aspx">利用JAVA SCRIPT來格式化日期</a>  */String.prototype.padL = function(length, pad) {         if (!length) return this;            if (length < 1) return this;                     if (!pad) pad = " ";         var intLen = length - this.length;              if (intLen < 1) return this.substr(0, length);               return (String.repeat(pad, intLen) + this).substr(0, length);     }         /** * 字串延長函數(右邊延長)。 *   * @author ace *  * @version 2010/10/14 v0.10 初始版本。    *    * @param {Integer} length 字串延長後長度。 * @param {String} pad 若字串長度未達參數length指定之長度，則以此字元延長。     *    * @return 延長後的字串。  * @type String  *    * @requires  *      * @see <a href="http://www.dotblogs.com.tw/wxvbbo/archive/2008/03/31/2368.aspx">利用JAVA SCRIPT來格式化日期</a>  */String.prototype.padR = function(length, pad) {       if (!length) return this;          if (length < 1) return this;      if (!pad) pad = " ";            var intLen = length - this.length           if (intLen < 1) this.substr(0, length);           return (this + String.repeat(pad, intLen)).substr(0, length); }/** * 去除字串前後空白字元。 *   * @author ace *  * @version 2012/02/07 v0.10 初始版本。    *    * @param {String}  *    * @return 去除字串前後空白字元。  * @type String  *    * @requires StirngUtils.js *      * @see <a href="http://jsgears.com/thread-132-1-1.html">JavaScript Trim Function</a>  */String.prototype.trim = function() {	return trim(this);}  /** * 字元重複函數。 *   * @author ace *  * @version 2010/10/14 v0.10 初始版本。    *    * @param {String} chr 重複字元。 * @param {Integer} times 重複次數。     *    * @return 字元重複後之字串。  * @type String  *    * @requires  *      * @see <a href="http://www.dotblogs.com.tw/wxvbbo/archive/2008/03/31/2368.aspx">利用JAVA SCRIPT來格式化日期</a>  */String.repeat = function(chr, times) {           var strReturn = "";        for (var intCount = 0; intCount < times; intCount++) strReturn += chr;        return strReturn; }/** * 刪除HTML標籤函數。 *   * @author ace *  * @version 2010/10/17 v0.10 初始版本。    *    * @param {String} Value 內含HTML標籤之字串。 *    * @return 刪除HTML標籤後之字串。  * @type String  *    * @requires  *      * @see <a href="http://www.jlorocks.com/content.aspx?conId=1275">innerHTML與innerText的用法與區別</a>  */String.replaceHTMLTag = function(Value) {    if (Value) {        return Value.replace(/<.+?>/gim, "");    }    else {        return Value;    }}/** * 格式化日期。 *   * @author ace *  * @version 2010/10/14 v0.10 初始版本。    * @version 2010/10/14 v0.11 增加毫秒(milliseconds)字串格式。    * @version 2011/09/22 v0.12 參考Delphi之FormatDataTime函數，月份格式改以"mm"字串判斷，分鐘格式改以"nn"字串判斷。 *    * @param {String} format 格式化日期字串樣式。    *    * @return 經過格式化之字串。  * @type String  *    * @requires  *      * @see <a href="http://www.dotblogs.com.tw/wxvbbo/archive/2008/03/31/2368.aspx">利用JAVA SCRIPT來格式化日期</a>   */Date.prototype.formatDate = function(format) {         if (!format) format = "mm/dd/yyyy"; // default format                                      var date = this;        var intMonth = date.getMonth() + 1;    var intHours = date.getHours();             // 日期資料。         if (format.indexOf("yyyy") > -1) {        format = format.replace("yyyy", date.getFullYear().toString());         }             else if (format.indexOf("yy") > -1) {        format = format.replace("yy", date.getFullYear().toString().substr(2, 2));          }                  format = format.replace("mm", intMonth.toString().padL(2, "0"));        format = format.replace("dd", date.getDate().toString().padL(2, "0"));              // 時間資料。         if (format.indexOf("t") > -1) {                if (intHours > 11)                     format = format.replace("t", "pm");                else                     format = format.replace("t", "am");         }              if (format.indexOf("HH") > -1) format = format.replace("HH", intHours.toString().padL(2, "0"));              if (format.indexOf("hh") > -1) {					if (intHours > 12) intHours -= 12;			if (intHours == 0) intHours = 12;			format = format.replace("hh", intHours.toString().padL(2, "0"));                 }              if (format.indexOf("nn") > -1) format = format.replace("nn", date.getMinutes().toString().padL(2, "0"));         if (format.indexOf("ss") > -1) format = format.replace("ss", date.getSeconds().toString().padL(2, "0"));             if (format.indexOf("zzz") > -1) {      format = format.replace("zzz", date.getMilliseconds().toString().padL(3, "0"));         }             else if (format.indexOf("z") > -1) {      format = format.replace("z", date.getMilliseconds().toString());    }                  return format; }